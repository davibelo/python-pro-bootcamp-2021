
Procedural Oriented Programming
    A program in a procedural language is a list of instructions 
    where each statement tells the computer to do something. 
    It focuses on procedure (function) & algorithm is needed 
    to perform the derived computation.
    Example: Fortran, Cobol...
    
    An analogy: One man restaurant. One man that do all the work alone
    step by step.

Object Oriented Programming
    Is a programming paradigm based on the concept of "objects", 
    which can contain data and code: data in the form of fields 
    (often known as attributes or properties), and code, in the form 
    of procedures (often known as methods)

    OOP allows the developer to break the whole project code into 
    smaller pieces, called modules.
    
    An analogy: A normal restaurant with a manager that leads the 
    business with a specialized staff that executes specific functions on 
    restaurant as waiter to get orders, chef to cook, cleaner to clean.

How to use OOP
    OOP concept tries to model the reality.

    An object HAS attributes and DOES something (methods)

    Example: 
    
    Waiter  
        attributes:
            is_holding_plate = True
            tables_responsible = [4, 5, 6]
        methods:
            def take_orders(table, order)
            def deliver_order(table, order)
            def take_payment(amount)

    In OOP will can have multiple instances of the same object.
    
    Example: The restaurant has 2 waiters (Henry and Betty)
            In OOP:
                Waiter is a CLASS
                Henry and Betty are OBJECTS (instances of the class)

    In other words: 
        CLASS is a blueprint
        OBJECT is the constructed instance
    
    Example in python:        
        Creating a car object from CarBlueprint class
            car = CarBlueprint()
        Accessing object attributes
            car.speed 
            car.fuel
        Using object methods
            car.move()
            car.stop()

        
